<%- include('../../partials/header') %>

<div class="content-wrapper">
  <div class="content-header">
    <h1>Sub Account</h1>
  </div>

  <section class="content">
    <div class="container-fluid">
      <div class="row">
        <div class="col-12">
          <div class="card">
            <div class="card-body">
              <!-- Create Sub Account Form -->
              <div class="mb-3">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createSubAccountModal">
                  Create Sub Account
                </button>
              </div>

              <!-- Sub Account Table -->
              <table id="dataTable" class="table table-bordered table-striped">
                <thead>
                  <tr>
                    <th>Kode Subakun</th>
                    <th>Nama Subakun</th>
                    <th>Nama Akun</th>
                    <th>Tipe Akun</th>
                    <th>Saldo Normal Akun</th>
                    <th>Created At</th>
                    <th>Action</th> <!-- New column for delete action -->
                  </tr>
                </thead>
                <tbody id="tableBody">
                  <!-- Table content will be dynamically generated here -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

<!-- Create Sub Account Modal -->
<div class="modal fade" id="createSubAccountModal" tabindex="-1" role="dialog" aria-labelledby="createSubAccountModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="createSubAccountModalLabel">Create Sub Account</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="createSubAccountForm">
          <div class="form-group">
            <label for="accountCode">Account Code</label>
            <select class="form-control" id="accountCode" name="account_code">
              <!-- Options will be dynamically generated using JavaScript -->
            </select>
          </div>
          <div class="form-group">
            <label for="subAccountCode">Sub Account Code</label>
            <input type="text" class="form-control" id="subAccountCode" name="code" placeholder="Enter Sub Account Code" required>
          </div>
          <div class="form-group">
            <label for="subAccountName">Sub Account Name</label>
            <input type="text" class="form-control" id="subAccountName" name="name" placeholder="Enter Sub Account Name" required>
          </div>
          <button type="submit" class="btn btn-primary">Create</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  // Fetch data from API
  fetch('https://api.appschool.biz.id/api/coa-subaccount')
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        populateTable(data.data);
        initializeDataTable();
      } else {
        console.error('Failed to fetch data from API');
      }
    })
    .catch(error => console.error('Error fetching data:', error));

  // Fetch account codes for the select dropdown
  fetch('https://api.appschool.biz.id/api/coa-account')
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        populateAccountCodes(data.data);
      } else {
        console.error('Failed to fetch account codes from API');
      }
    })
    .catch(error => console.error('Error fetching account codes:', error));

  // Handle form submission for creating sub account
  document.getElementById('createSubAccountForm').addEventListener('submit', function (event) {
    event.preventDefault();
    createSubAccount();
  });
});

function populateAccountCodes(accountData) {
  const accountCodeSelect = document.getElementById('accountCode');

  // Clear existing options
  accountCodeSelect.innerHTML = '';

  // Populate select dropdown with account codes
  accountData.forEach(account => {
    const option = document.createElement('option');
    option.value = account.code;
    option.textContent = `${account.code} - ${account.name}`;
    accountCodeSelect.appendChild(option);
  });
}

function populateTable(subAccountData) {
  const tableBody = document.getElementById('tableBody');

  // Clear existing table content
  tableBody.innerHTML = '';

  // Populate table with data
  subAccountData.forEach(subAccount => {
    const row = document.createElement('tr');
    row.innerHTML = `
      <td>${subAccount.code}</td>
      <td>${subAccount.name}</td>
      <td>${subAccount.coa_account_name}</td>
      <td>${subAccount.coa_account_type}</td>
      <td>${subAccount.coa_account_normal_balance}</td>
      <td>${formatDate(subAccount.created_at)}</td>
      <td>
        <button class="btn btn-danger" onclick="deleteSubAccount(${subAccount.id})">Delete</button>
      </td>
    `;

    tableBody.appendChild(row);
  });
}

function initializeDataTable() {
  // Initialize DataTable with paging and limit
  $("#dataTable").DataTable({
    "paging": true,
    "pageLength": 10,  // Set the default number of rows per page
    "lengthMenu": [10, 25, 50, 100],  // Set available options for rows per page
    "lengthChange": false,
    "searching": false,
    "ordering": true,
    "info": true,
    "autoWidth": false,
    "responsive": true,
    "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
  }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
}

function formatDate(dateString) {
  if (dateString) {
    const options = { year: 'numeric', month: 'long', day: 'numeric' };
    return new Date(dateString).toLocaleDateString('id-ID', options);
  } else {
    return '-';
  }
}

function createSubAccount() {
  const createSubAccountForm = document.getElementById('createSubAccountForm');
  const formData = new FormData(createSubAccountForm);

  // Convert FormData to JSON
  const json = Array.from(formData.entries()).reduce((acc, [key, value]) => {
    acc[key] = value;
    return acc;
  }, {});

  fetch('https://api.appschool.biz.id/api/coa-subaccount/create', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(json),
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Refresh table with updated data
        fetchSubAccountData();
        // Close the modal
        $('#createSubAccountModal').modal('hide');
      } else {
        console.error('Failed to create sub account:', data.message);
      }
    })
    .catch(error => console.error('Error creating sub account:', error));
}


function deleteSubAccount(subAccountId) {
  fetch(`https://api.appschool.biz.id/api/coa-subaccount/delete/${subAccountId}`, {
    method: 'DELETE',
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // Refresh table with updated data
        fetchSubAccountData();
      } else {
        console.error('Failed to delete sub account:', data.message);
      }
    })
    .catch(error => console.error('Error deleting sub account:', error));
}

function fetchSubAccountData() {
  // Fetch updated data from API
  fetch('https://api.appschool.biz.id/api/coa-subaccount')
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        populateTable(data.data);
      } else {
        console.error('Failed to fetch data from API');
      }
    })
    .catch(error => console.error('Error fetching data:', error));
}
</script>

<%- include('../../partials/footer') %>
